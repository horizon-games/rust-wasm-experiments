{"version":3,"sources":["webpack:///./crate/pkg/ball_wasm.js"],"names":["__webpack_require__","r","__webpack_exports__","d","__wbg_random_918d3291fe65513c","__wbg_sqrt_6ac1ec864938feb9","Ball","__wbindgen_throw","_ball_wasm_bg__WEBPACK_IMPORTED_MODULE_0__","Math","random","arg0","sqrt","[object Object]","ptr","this","freeBall","x","y","radius","arg1","arg2","arg3","arg4","arg5","arg6","arg7","arg8","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getStringFromWasm","len","decode","buffer","Uint8Array","subarray","Error"],"mappings":"uFAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,kDAAAE,IAAAJ,EAAAG,EAAAD,EAAA,gDAAAG,IAAAL,EAAAG,EAAAD,EAAA,yBAAAI,IAAAN,EAAAG,EAAAD,EAAA,qCAAAK,IAAA,IAAAC,EAAAR,EAAA,GAGO,SAAAI,IACP,OAAAK,KAAAC,SAGO,SAAAL,EAAAM,GACP,OAAAF,KAAAG,KAAAD,GASO,MAAAL,EAEPO,OACA,MAAAC,EAAAC,KAAAD,IACAC,KAAAD,IAAA,EAVA,SAAAA,GAEIN,EAAA,EAAoBM,GASxBE,CAAAF,GAMAG,QACA,OAAeT,EAAA,EAAqBO,KAAAD,KAEpCG,MAAAN,GACA,OAAeH,EAAA,EAAqBO,KAAAD,IAAAH,GAKpCO,QACA,OAAeV,EAAA,EAAqBO,KAAAD,KAEpCI,MAAAP,GACA,OAAeH,EAAA,EAAqBO,KAAAD,IAAAH,GAKpCQ,aACA,OAAeX,EAAA,EAA0BO,KAAAD,KAEzCK,WAAAR,GACA,OAAeH,EAAA,EAA0BO,KAAAD,IAAAH,GAczCE,YAAAF,EAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAZ,KAAAD,IAAmBN,EAAA,EAAaG,EAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAKhCd,OACA,OAAeL,EAAA,EAAcO,KAAAD,KAO7BD,2BAAAF,EAAAS,GACA,OAAeZ,EAAA,EAAoCO,KAAAD,IAAAH,EAAAS,GAMnDP,mBAAAF,GACA,OAA4C,IAA5BH,EAAA,EAA4BO,KAAAD,IAAAH,EAAAG,KAM5CD,qBAAAF,GACA,OAAeH,EAAA,EAA8BO,KAAAD,IAAAH,EAAAG,KAO7CD,kCAAAF,EAAAS,GACA,OAAeZ,EAAA,EAA2CO,KAAAD,IAAAH,EAAAS,GAK1DP,SACA,OAAeL,EAAA,EAAgBO,KAAAD,MAI/B,IAAAc,EAAA,IAAAC,YAAA,SAEAC,EAAA,KAQA,SAAAC,EAAAjB,EAAAkB,GACA,OAAAJ,EAAAK,QAPA,OAAAH,KAAAI,SAAuE1B,EAAA,EAAW0B,SAClFJ,EAAA,IAAAK,WAA6C3B,EAAA,EAAW0B,SAExDJ,GAIAM,SAAAtB,IAAAkB,IAGO,SAAAzB,EAAAO,EAAAkB,GACP,UAAAK,MAAAN,EAAAjB,EAAAkB","file":"1.bundle.js","sourcesContent":["/* tslint:disable */\nimport * as wasm from './ball_wasm_bg';\n\nexport function __wbg_random_918d3291fe65513c() {\n    return Math.random();\n}\n\nexport function __wbg_sqrt_6ac1ec864938feb9(arg0) {\n    return Math.sqrt(arg0);\n}\n\nfunction freeBall(ptr) {\n\n    wasm.__wbg_ball_free(ptr);\n}\n/**\n*/\nexport class Ball {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeBall(ptr);\n    }\n\n    /**\n    * @returns {number}\n    */\n    get x() {\n        return wasm.__wbg_get_ball_x(this.ptr);\n    }\n    set x(arg0) {\n        return wasm.__wbg_set_ball_x(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get y() {\n        return wasm.__wbg_get_ball_y(this.ptr);\n    }\n    set y(arg0) {\n        return wasm.__wbg_set_ball_y(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get radius() {\n        return wasm.__wbg_get_ball_radius(this.ptr);\n    }\n    set radius(arg0) {\n        return wasm.__wbg_set_ball_radius(this.ptr, arg0);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @param {number} arg4\n    * @param {number} arg5\n    * @param {number} arg6\n    * @param {number} arg7\n    * @param {number} arg8\n    * @returns {}\n    */\n    constructor(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        this.ptr = wasm.ball_new(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);\n    }\n    /**\n    * @returns {void}\n    */\n    step() {\n        return wasm.ball_step(this.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n    manageStageBorderCollision(arg0, arg1) {\n        return wasm.ball_manageStageBorderCollision(this.ptr, arg0, arg1);\n    }\n    /**\n    * @param {Ball} arg0\n    * @returns {boolean}\n    */\n    checkBallCollision(arg0) {\n        return (wasm.ball_checkBallCollision(this.ptr, arg0.ptr)) !== 0;\n    }\n    /**\n    * @param {Ball} arg0\n    * @returns {void}\n    */\n    resolveBallCollision(arg0) {\n        return wasm.ball_resolveBallCollision(this.ptr, arg0.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n    setRandomPositionAndSpeedInBounds(arg0, arg1) {\n        return wasm.ball_setRandomPositionAndSpeedInBounds(this.ptr, arg0, arg1);\n    }\n    /**\n    * @returns {number}\n    */\n    random() {\n        return wasm.ball_random(this.ptr);\n    }\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n"],"sourceRoot":""}